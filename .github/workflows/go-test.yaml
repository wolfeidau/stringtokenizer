name: Unit Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: stringtokenizer-unit-tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: Unit Tests
    strategy:
      matrix:
        go-version: ["1.20"]
        platform: ["ubuntu-latest"]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Install tparse
        run: go install github.com/mfridman/tparse@latest

      - name: Test
        env:
          COVER_OPTS: "-coverprofile=coverage.txt -covermode=atomic"
          GOFLAGS:  "-v -count=1 -json"
        run: go test $COVER_OPTS ./... | tparse -all -notests -format markdown >> $GITHUB_STEP_SUMMARY

      - name: Verify git clean
        shell: bash
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "${{ github.repository }} up to date."
          else
            echo "${{ github.repository }} is dirty."
            echo "::error:: $(git status)"
            exit 1
          fi